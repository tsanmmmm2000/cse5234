
create table ITEM (ID int auto_increment primary key, ITEM_NUMBER int, NAME varchar(255), DESCRIPTION varchar(255), AVAILABLE_QUANTITY int, UNIT_PRICE double);
create table CUSTOMER_ORDER (ID int auto_increment primary key, CUSTOMER_NAME varchar(255), CUSTOMER_EMAIL varchar(255), SHIPPING_INFO_ID_FK int, PAYMENT_INFO_ID_FK int, STATUS varchar(255) default 'New');
create table CUSTOMER_ORDER_LINE_ITEM (ID int auto_increment primary key, ITEM_NUMBER int, ITEM_NAME varchar(255), QUANTITY int, CUSTOMER_ORDER_ID_FK int);
create table PAYMENT_INFO (ID int auto_increment primary key, HOLDER_NAME varchar(255), CARD_NUM varchar(255),  EXP_DATE varchar(255), CVV varchar(3));
create table SHIPPING_INFO (ID int auto_increment primary key, ADDRESS1 varchar(255), ADDRESS2 varchar(255), CITY varchar(255), STATE varchar(255), COUNTRY varchar(255), POSTAL_CODE varchar(255), EMAIL varchar(255));


DROP TABLE IF EXISTS ITEM;
DROP TABLE IF EXISTS CUSTOMER_ORDER;
DROP TABLE IF EXISTS CUSTOMER_ORDER_LINE_ITEM;
DROP TABLE IF EXISTS PAYMENT_INFO;
DROP TABLE IF EXISTS SHIPPING_INFO;

-- insert into payment ( amount ) values (250);
-- ALTER TABLE CUSTOMER_ORDER add column (PAYMENT_INFO_ID_FK int);
-- ALTER TABLE PAYMENT_INFO  drop column CUSTOMER_ORDER_ID_FK;



Tips
- Use a utility to convert from Item to LineItem to keep Purchase controller clean
	* do not copy id (leave it empty, it will be controlled by DB)
	* do not copy avaialbel quantity into quantity attribute (which should really be renamed to quantityRequested)
	* copy item name (display), item number (to keep track), and item price (display) > use hidden tags to hold the values

- Modify URL to include mixed mode access


INSERT INTO ITEM ("ITEM_NUMBER", "NAME", "DESCRIPTION", "AVAILABLE_QUANTITY", "UNIT_PRICE")
VALUES (5, 'polo', 'polo' , 2, 30)

SET PASSWORD ''









